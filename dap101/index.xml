<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Análisis de Datos en Python on</title><link>https://mariel-rs.github.io/datlab/dap101/</link><description>Recent content in Análisis de Datos en Python on</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://mariel-rs.github.io/datlab/dap101/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Introducción a Python</title><link>https://mariel-rs.github.io/datlab/dap101/1-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/1-intro/</guid><description>Introducción Python es un lenguaje de programación fácil de aprender, con estructuras de datos eficientes. Es considerado como el lenguaje más popular para aprender por su versatilidad, su enfoque sencillo y la cantidad de librerías disponibles para machine learning, análisis de datos y visualización de datos.
Salida por pantalla Lo primero que se suele hacer cuando aprendemos a programar es saludar. Hello world.
print(&amp;#34;Hello world&amp;#34;) print(1+1) Un comentario Los comentarios son porciones del código que no se ejecutan.</description></item><item><title>2. Primer programa en Python</title><link>https://mariel-rs.github.io/datlab/dap101/2-first_program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/2-first_program/</guid><description>Introducción Python es un lenguaje de programación completo que puede realizar distintos tipos de operaciones: matemáticas, lógicas y relacionales. En esta sección veremos los operadores que Python utiliza y cómo usarlos.
Operaciones matemáticas Suma
Se indica con el operador +
print(2 + 3) Resta
Se indica con el operador -
print(2 - 3) Multiplicación
Se indica con el operador *
# Multiplicaciones print(2 * 3) Potencias
Las potencias se indican con el operador ** (Python no usa ^ para indicar potencias como otros lenguajes)</description></item><item><title>3. Bucles</title><link>https://mariel-rs.github.io/datlab/dap101/3-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/3-loop/</guid><description>Introducción Un bucle es estructura de control que repite un bloque de código con instrucciones una y otra vez. Los bucles pueden ser finitos (se repiten un determinado número de veces) o infinitos.
Bucles For For es un bucle finito, puesto que definimos el inicio y el fin. Típicamente se usan cuando conocemos la cantidad de veces que deseamos repetir instrucciones.
Por ejemplo, cuando queremos acceder a una lista por sus elementos.</description></item><item><title>4. Manejo de datos</title><link>https://mariel-rs.github.io/datlab/dap101/4-pandas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/4-pandas/</guid><description>Introducción pandas es la librería de Python más utilizada para procesar datos. pandas puede leer datos de archivos CSV, JSON, txt, xls, xlsx, entre otros. La estructura de datos más común de esta librería es DataFrame, que es una estructura de datos tabular bidimensional con ejes etiquetados (filas y columnas).
Datos
Usaremos los siguientes archivos para los ejercicios de este tema:
Archivos estudiantes_mxuk.csv (9 KB) inah_visitantes_2022.csv (19 KB) Primeros pasos Creamos un Jupyter notebook y creamos un cuadro con código.</description></item><item><title>5. Visualización</title><link>https://mariel-rs.github.io/datlab/dap101/5-visualizacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/5-visualizacion/</guid><description>Introducción La información que hemos procesado previamente se puede visualizar usando gráficos. En esta sección veremos como crear gráficos profesionales con matplotlib y seaborn.
Datos
Usaremos los siguientes archivos para los ejercicios de este tema:
Archivos aspirantes_inecol2020.csv (1 KB) estudiantes_mxuk.csv (9 KB) inah_visitantes_2022.csv (19 KB) Librerías
Usaremos las siguientes librerías para los ejercicios de este tema:
import pandas as pd import matplotlib.pyplot as plt import seaborn as sns Descripción de datos</description></item><item><title>6. Análisis estadístico</title><link>https://mariel-rs.github.io/datlab/dap101/6-stats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/6-stats/</guid><description>Introducción Python tiene bastantes librerías para realizar análisis estadístico. En esta sección nos concentraremos en SciPy y statsmodels.
Datos
Usaremos los siguientes archivos para los ejercicios de este tema:
Archivos edadpesograsas.txt (266 B) precipitacion_guerrero.csv (3 KB) Librerías
Para esta sección usaremos las siguientes librerías:
import pandas as pd import matplotlib.pyplot as plt import seaborn as sns import scipy.stats as stats Datos de precipitación
Usaremos el archivo precipitacion_guerrero.csv que contiene datos históricos mensuales y anuales de precipitación en Guerrero desde 1985 hasta 2020.</description></item><item><title>7. Recapitulación</title><link>https://mariel-rs.github.io/datlab/dap101/7-proyecto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/7-proyecto/</guid><description>Introducción Ahora que hemos aprendido sobre como usar las librerías de manipulación de datos, visualizaciónes y análisis estadístico, haremos un pequeño ejercicio.
Datos
Usaremos el siguiente archivo para recapitular todo lo aprendido:
Archivos endutih_vivienda_anual_2019_enc.csv (992 KB) Estos son datos recopilados por INEGI en su encuesta ENDUTIH de 2019. La descripción de las columnas es la siguiente:
Variable Tipo variable Descripción pregunta energia_electrica Binaria La vivienda dispone de energía eléctrica refrigerador Binaria La vivienda dispone de refrigerador lavadora Binaria La vivienda dispone de lavadora auto_propio Binaria Las personas viviendo en esta vivienda disponen de automóvil o camioneta personas_vivienda Numérica Número de personas viviendo normalmente en la vivienda mismo_gasto Binaria El gasto para comer de todas las personas viviendo en la vivienda es el mismo TLOC Numérica Tamaño de la Localidad (1: 100 000 y más habitantes, 2: 15 000 a 99 999 habitantes, 3: 2 500 a 14 999 habitantes, 4: menor a 2500 habitantes) ESTRATO Numérica Estrato socioeconómico.</description></item></channel></rss>