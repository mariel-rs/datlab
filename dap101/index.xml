<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Análisis de Datos en Python on Español</title><link>https://mariel-rs.github.io/datlab/dap101/</link><description>Recent content in Análisis de Datos en Python on Español</description><generator>Hugo -- gohugo.io</generator><language>es</language><atom:link href="https://mariel-rs.github.io/datlab/dap101/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Introducción a Python</title><link>https://mariel-rs.github.io/datlab/dap101/1-intro/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/1-intro/</guid><description>Ejercicios Salida por pantalla print(&amp;#34;Hello world&amp;#34;) print(1+1) Un comentario # Hola, soy un comentario. print(&amp;#34;Hello world&amp;#34;) print(1+1) # Hola, soy un comentario. # print(&amp;#34;Hello world&amp;#34;) # Acabo de comentar esta linea print(1+1) Variables a = 2 print(a) Tipo de datos Enteros (int) a = 1 print(a) print(type(a)) Flotantes (float) a = 3.98 print(a) print(type(a)) a = 1.0 print(a) print(type(a)) Booleanos (bool) a = True print(a) print(type(a)) a = 1 print(a) print(type(a)) Cadenas de texto (str) a = &amp;#34;Hola&amp;#34; print(a) Convertir tipos de datos # Esto aunque parezca booleano, Python lo entendera como un entero bool_test = 1 print(bool_test) print(type(bool_test)) # Conversion de datos usando bool(), int(), float() real_bool = bool(1) real_int = int(2.</description></item><item><title>2. Primer programa en Python</title><link>https://mariel-rs.github.io/datlab/dap101/2-first_program/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/2-first_program/</guid><description>Ejercicios Operaciones # Sumas print(2 + 3) # Restas print(2 - 3) # Multiplicaciones print(2 * 3) # Divisiones print(2 / 3) # Potencia print(2 ** 3) # Division print(38 / 5) # Cociente de la division print(38 // 5) # Residuo de la division print(38 % 5) Comparadores # Dos numeros x = 3 y = 4 # Menor que print(x &amp;lt; y) # Igual que print(x == y) # No es igual que print(x !</description></item><item><title>3. Bucles</title><link>https://mariel-rs.github.io/datlab/dap101/3-loop/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/3-loop/</guid><description>Ejercicios Bucles For Accesando una lista por sus elementos
# Una lista con numeros a = [1, 2, 10, 0, 6] for el in a: print(el) Range
range(j) # 0, 1, 2, ..., j-1 range(i, j) # i, i+1, i+2, ..., j-1 range(i, j, k) # i, i+k, i+2k, ..., i+m Algunos ejemplos
range_list = list(range(5)) print(range_list) ten_hundred = list(range(10, 101, 10)) print(ten_hundred) Accesando a la lista usando indices
# Ahora usamos indice for i in range(len(a)): print(a[i]) Ejercicio</description></item><item><title>4. Manejo de datos</title><link>https://mariel-rs.github.io/datlab/dap101/4-pandas/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/4-pandas/</guid><description>Ejercicios Datos Para los ejercicios de este tema, usaremos los siguientes archivos:
Archivos estudiantes_mxuk2021.csv (9 KB) inah_visitantes_2022.csv (20 KB) Introducción Creamos un Jupyter notebook como pandas.ipynb y creamos un cuadro con código. Analizaremos el archivo inah_visitantes_2022.csv. Este archivo es especial por la presencia de tildes y porque usa , para separar miles. Esto se puede hacer usando las keywords encoding y thousands, respectivamente.
import pandas as pd import os # interfaces de sistemas operativos # definir la ubicacion del archivo path = os.</description></item><item><title>5. Visualización</title><link>https://mariel-rs.github.io/datlab/dap101/5-visualizacion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/5-visualizacion/</guid><description>Ejercicios Datos Para los ejercicios de este tema, usaremos los siguientes archivos:
Adjuntos aspirantes_inecol2020.csv (2 KB) estudiantes_uk2021.csv (10 KB) inah_bibliotecas_abiertas.csv (13 KB) inah_visitantes_2022.csv (20 KB) mayan_sites.csv (23 KB) matplotlib Barras Dispersión seaborn Pairplot para encontrar relaciones Histogramas Diagramas de caja (boxplot) Tarea</description></item><item><title>6. Análisis estadístico</title><link>https://mariel-rs.github.io/datlab/dap101/6-stats/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/6-stats/</guid><description>Ejercicios Datos Para los ejercicios de este tema, usaremos los siguientes archivos:
Adjuntos aspirantes_inecol2020.csv (2 KB) estudiantes_uk2021.csv (10 KB) inah_bibliotecas_abiertas.csv (13 KB) inah_visitantes_2022.csv (20 KB) mayan_sites.csv (23 KB) Regresión Prueba de hipótesis Tarea</description></item><item><title>7. Proyecto final</title><link>https://mariel-rs.github.io/datlab/dap101/7-proyecto/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://mariel-rs.github.io/datlab/dap101/7-proyecto/</guid><description>Descripción del proyecto Datos Para los ejercicios de este tema, usaremos los siguientes archivos:
Entregable</description></item></channel></rss>